name: Build and Release

on:
  push:
    branches:
      - main
    paths:
      - "package.json"
      - "package-lock.json"
      - "index.js"

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.get_version.outputs.version }}  # Pass version as output

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '14'  # Specify your Node.js version

      - name: Install Dependencies
        run: npm install

      - name: Extract Version from package.json
        id: get_version
        run: echo "version=$(jq -r .version package.json)" >> $GITHUB_OUTPUT

      - name: Run Build Script
        run: npm run build  # Ensure this script creates the zip file

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-zip
          path: dist/latest.zip  # Update with the actual path to your zip file
          retention-days: 1  # Keep artifact for 1 day

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-zip
          path: ./  # Downloads to the current directory

      - name: Get Version from Build Job
        run: echo "VERSION=${{ needs.build.outputs.version }}" >> $GITHUB_ENV

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          release_name: Release v${{ env.VERSION }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./latest.zip  # Ensure this matches the download location
          asset_name: v${{ env.VERSION }}.zip
          asset_content_type: application/zip
